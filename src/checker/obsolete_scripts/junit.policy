grant {
	permission java.util.PropertyPermission "user.home","read";
	permission java.io.FilePermission "/home/praktomat/junit.properties", "read";
	permission java.io.FilePermission "/home/tester/junit.properties", "read";
	permission java.io.FilePermission "${user.dir}${/}data${/}-", "read";
	// WRITE PERMISSION FOR WORKING DIRECTORY
	permission java.io.FilePermission "${user.dir}${/}-", "write";
	permission java.io.FilePermission "/praktomat/data/SolutionSandbox/-","read";
	permission java.lang.RuntimePermission "accessDeclaredMembers";
	permission java.lang.RuntimePermission "getStackTrace";
	permission java.lang.RuntimePermission "setIO";
	permission java.lang.management.ManagementPermission "monitor";
	permission java.util.PropertyPermission "user.dir" , "read";

	permission java.io.FilePermission "save.csv", "write";
	permission java.io.FilePermission "spielDieZombie.txt", "write";
	permission java.io.FilePermission "spielDieZombie2.txt", "write";

    // Ostfalia JUnit Addon
	permission java.util.PropertyPermission "JUnitAddOn.TestCondition", "read";
	permission java.util.PropertyPermission "JUnitAddOn.TestCondition", "write";
	permission java.lang.RuntimePermission "getenv.JUnitAddOn.TestCondition";

    // JUnit5 with RunListener
	permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
	// Junit5 without RunListener
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.trace" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.converters.excludes" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.trimQuotes" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.color.commands" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.color.options" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.color.parameters" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.color.optionParams" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.usage.width" , "read";
	permission java.util.PropertyPermission "org.junit.platform.console.shadow.picocli.ansi" , "read";
	permission java.lang.RuntimePermission "getenv.NO_COLOR";
	permission java.lang.RuntimePermission "getenv.CLICOLOR_FORCE";
	permission java.lang.RuntimePermission "getenv.CLICOLOR";
	permission java.lang.RuntimePermission "getenv.ConEmuANSI";
	permission java.lang.RuntimePermission "setContextClassLoader";
	permission java.lang.RuntimePermission "closeClassLoader";

};

// Junit4-RunListener
grant codeBase "file:/praktomat/extra/Junit4RunListener.jar" {
	// for stripping the stacktrace
	permission java.lang.RuntimePermission "accessClassInPackage.sun.nio.fs";
	// for handling exit cleanup
	permission java.lang.RuntimePermission "shutdownHooks";
};

grant codeBase "file:/praktomat/lib/junit-4.12.jar" {
	// for stripping the stacktrace
	permission java.lang.RuntimePermission "accessClassInPackage.sun.nio.fs";
};


// JUnit5-RunListener
grant codeBase "file:/praktomat/extra/Junit5RunListener.jar" {
	// for stripping the stacktrace
	// Java 8
	permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
	// Java 11
	permission java.lang.RuntimePermission "accessClassInPackage.jdk.internal.reflect";

/*	permission java.lang.RuntimePermission "setIO";
	permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
	permission java.lang.RuntimePermission "accessDeclaredMembers";
	permission java.lang.RuntimePermission "getStackTrace";
*/

	// for handling exit cleanup
	permission java.lang.RuntimePermission "shutdownHooks";
};

// JUnit5-Jar
grant codeBase "file:/praktomat/lib/junit-platform-console-standalone-1.6.1.jar" {
	// for stripping the stacktrace
	// Java 8
	permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
	// Java 11
	permission java.lang.RuntimePermission "accessClassInPackage.jdk.internal.reflect";
};
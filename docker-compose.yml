version: '3'

# perform the following steps in buuild the docker container images: 
# 1.a) fill subfolder 'extra' with needed additional libraries for grading (e.g. JUNIT)
#   b) adjust src/settings_docker.py to your needs
# 2. docker-compose up

services:
  postgres:
    restart: always
    environment:
      POSTGRES_USER: pmuser
      POSTGRES_PASSWORD: pmuserpass
      POSTGRES_DB: pmdb  
      # POSTGRES_INITDB_ARGS: -E UTF8
    image: postgres
    container_name: praktomat_database3
    #ports:
    # - "5432:5432"
     
  praktomat:
    devices:
    - "/dev/fuse"
    cap_add:
    # - ALL
    - SYS_ADMIN # for calling unshare in test process
    - SYS_CHROOT # for calling chroot in test process with layers
    build:
        context: .
        args:
          LOCALE: de_DE.UTF-8
          PASSWORD: ${PRAKTOMATPASSWORD}
            # LOCALE: en_US.UTF-8
    container_name: praktomat3
    # restart container if it exits:
    restart: always
    environment:
      SUPERUSER: praktomat
      EMAIL: ${PRAKTOMATMAIL}
      # todo: check what is needed?
      DB_NAME: pmdb
      DB_USER: pmuser
      DB_PASS: pmuserpass
      DB_PORT: 5432
      DB_HOST: postgres
      DB_DOCKER_SERVICE: praktomat_database3
      DATABASE: postgres
      SVNUSER: ${SVNUSERNAME}
      SVNPASS: ${SVNPASSWORD}
      GITUSER: ${GITUSERNAME}
      GITPASS: ${GITPASSWORD}

    # number of workers = 2* cumber of CPU cores + 1
    #command: python3 ./manage-docker.py runserver 0.0.0.0:8010
    command: gunicorn wsgi --bind 0.0.0.0:8010 --workers=5 --worker-class=eventlet
    ###command: /bin/su -c "exec gunicorn wsgi --bind 0.0.0.0:8010 --workers=1 --worker-class=eventlet" praktomat
    #command: gunicorn wsgi:praktomat --bind 0.0.0.0:8010 --workers=5 --worker-class=eventlet

    #command: sleep 100000
    #command: ./manage.py runserver 0.0.0.0:8010
    #command: ./src/manage.py runserver 0.0.0.0:8010

    volumes:
     - ./extra:/praktomat/extra
      # for development: map source folders into container:
      # not for production!
     - ./src:/praktomat/src
    ports:
      - "8010:8010"
    depends_on:
      - postgres
      
     
# ngninx is needed for the browser interface
  nginx:
   # do not use '_' in container name because django gets confused with _ in host names (Moodle docker)
   container_name: praktomat_nginx3
   restart: always    
   build: ./nginx
   volumes:
   # static content to serve
    - ./media:/praktomat/media
    # ssl certificate
    # - /data/certs:/etc/nginx/certs
   ports:
     - 80:80
     - 443:443
   depends_on:
     - praktomat

